#!/bin/bash
if [ "$1" = "ls" ]; then
    for i in $(ls -d $HOME/.vim/saved_workspaces/*/); do echo $(basename $i); done
    exit
elif [ "$1" = "create" ]; then
    PROJECT=$2
    FOLDER=$3
    WORKSPACE="$HOME/.vim/saved_workspaces/$PROJECT/"
    mkdir -p $WORKSPACE
    echo -e "workspace name: ${PROJECT}\ndate create: $(date)" > "${WORKSPACE}/.workspace"
    cd $WORKSPACE
    ln -s $FOLDER $(basename $FOLDER)
elif [ "$1" = "add" ]; then
    PROJECT=$2
    FOLDER=$3
    WORKSPACE="$HOME/.vim/saved_workspaces/$PROJECT/"
    cd $WORKSPACE
    rm "$(basename $FOLDER)"
    ln -s "$FOLDER" "$(basename $FOLDER)"
elif [ "$1" = "open" ]; then
    PROJECT=$2
    WORKSPACE="$HOME/.vim/saved_workspaces/$PROJECT/"
    if [ ! -d "$WORKSPACE" ]; then
        echo "Can't find project $PROJECT"
        exit
    fi
    export WORKSPACE=$WORKSPACE
    CMD="nvim +'WorkspaceOpen $2' +'NvimTreeOpen ${WORKSPACE}'"
    ENV_FILE="${WORKSPACE}.env"
    if test -f "$ENV_FILE"; then
      set -a
      source $ENV_FILE
      set +a
    fi
    SESSION_NAME="dive-$1"
    if  [ ! "$TERM" = "screen" ] && [ ! -n "$TMUX" ]; then
      tmux new-session -d -s ${SESSION_NAME} "${CMD}"
      tmux attach-session -t ${SESSION_NAME}
      tmux rename-window "p:$PROJECT"
    else
      tmux rename-window "p:$PROJECT"
      eval "${CMD}"
    fi
else
    [ "$1" = "help" ] || echo "No such subcommand!"
    echo "Available command are:"
    echo "ls - list of projects"
    echo "open [project] - open project for editing"
    echo "create [project] [path] - create new project"
fi
